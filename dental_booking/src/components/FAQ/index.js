import React, { useState } from 'react';
import './FAQ.scss';

const FAQ = () => {
  const [openItems, setOpenItems] = useState(new Set());
  const [searchTerm, setSearchTerm] = useState('');

  const faqData = [
    {
      id: 1,
      category: 'D·ªãch v·ª• chung',
      question: 'Ph√≤ng kh√°m c√≥ nh·ªØng d·ªãch v·ª• nha khoa n√†o?',
      answer: 'Ch√∫ng t√¥i cung c·∫•p ƒë·∫ßy ƒë·ªß c√°c d·ªãch v·ª• nha khoa t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao bao g·ªìm: kh√°m t·ªïng qu√°t, t·∫©y tr·∫Øng rƒÉng, ni·ªÅng rƒÉng, c·∫•y gh√©p implant, b·ªçc rƒÉng s·ª©, nh·ªï rƒÉng kh√¥n, ƒëi·ªÅu tr·ªã n∆∞·ªõu, v√† c√°c d·ªãch v·ª• th·∫©m m·ªπ rƒÉng mi·ªáng kh√°c. T·∫•t c·∫£ ƒë∆∞·ª£c th·ª±c hi·ªán b·ªüi ƒë·ªôi ng≈© b√°c sƒ© gi√†u kinh nghi·ªám v·ªõi trang thi·∫øt b·ªã hi·ªán ƒë·∫°i.',
      icon: 'ü¶∑'
    },
    {
      id: 2,
      category: 'Gi√° c·∫£',
      question: 'Chi ph√≠ ƒëi·ªÅu tr·ªã nha khoa nh∆∞ th·∫ø n√†o?',
      answer: 'Chi ph√≠ ƒëi·ªÅu tr·ªã ph·ª• thu·ªôc v√†o lo·∫°i d·ªãch v·ª• v√† t√¨nh tr·∫°ng rƒÉng mi·ªáng c·ª• th·ªÉ. Ch√∫ng t√¥i lu√¥n b√°o gi√° minh b·∫°ch v√† chi ti·∫øt tr∆∞·ªõc khi ƒëi·ªÅu tr·ªã. Ph√≤ng kh√°m c√≥ c√°c g√≥i ∆∞u ƒë√£i v√† h·ªó tr·ª£ tr·∫£ g√≥p cho c√°c ca ƒëi·ªÅu tr·ªã l·ªõn. B·∫°n c√≥ th·ªÉ li√™n h·ªá ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n b√°o gi√° c·ª• th·ªÉ.',
      icon: 'üí∞'
    },
    {
      id: 3,
      category: 'ƒê·∫∑t l·ªãch',
      question: 'L√†m th·∫ø n√†o ƒë·ªÉ ƒë·∫∑t l·ªãch kh√°m?',
      answer: 'B·∫°n c√≥ th·ªÉ ƒë·∫∑t l·ªãch kh√°m qua nhi·ªÅu c√°ch: (1) G·ªçi ƒëi·ªán tr·ª±c ti·∫øp ƒë·∫øn hotline 0987 654 321, (2) ƒê·∫∑t l·ªãch online tr√™n website, (3) Nh·∫Øn tin qua Zalo ho·∫∑c Facebook, (4) ƒê·∫øn tr·ª±c ti·∫øp ph√≤ng kh√°m. Ch√∫ng t√¥i l√†m vi·ªác t·ª´ 8:00 - 20:00 t·∫•t c·∫£ c√°c ng√†y trong tu·∫ßn.',
      icon: 'üìÖ'
    },
    {
      id: 4,
      category: 'C·∫•y gh√©p Implant',
      question: 'C·∫•y gh√©p implant c√≥ ƒëau kh√¥ng? Th·ªùi gian th·ª±c hi·ªán bao l√¢u?',
      answer: 'Th·ªß thu·∫≠t c·∫•y gh√©p implant ƒë∆∞·ª£c th·ª±c hi·ªán d∆∞·ªõi t√™ c·ª•c b·ªô n√™n kh√¥ng g√¢y ƒëau. Th·ªùi gian c·∫•y gh√©p m·ªói rƒÉng kho·∫£ng 30-45 ph√∫t. Sau c·∫•y gh√©p, implant c·∫ßn th·ªùi gian 3-6 th√°ng ƒë·ªÉ l√†nh gh√©p v·ªõi x∆∞∆°ng h√†m. Sau ƒë√≥ s·∫Ω g·∫Øn m√£o rƒÉng s·ª© ho√†n thi·ªán.',
      icon: 'üîß'
    },
    {
      id: 5,
      category: 'Ni·ªÅng rƒÉng',
      question: 'Ni·ªÅng rƒÉng m·∫•t bao l√¢u? C√≥ nh·ªØng lo·∫°i ni·ªÅng rƒÉng n√†o?',
      answer: 'Th·ªùi gian ni·ªÅng rƒÉng trung b√¨nh t·ª´ 18-24 th√°ng, t√πy thu·ªôc v√†o m·ª©c ƒë·ªô kh√≥ c·ªßa ca ƒëi·ªÅu tr·ªã. Ch√∫ng t√¥i c√≥ c√°c lo·∫°i ni·ªÅng rƒÉng: ni·ªÅng kim lo·∫°i th∆∞·ªùng, ni·ªÅng s·ª©, ni·ªÅng m·∫∑t l∆∞·ª°i, ni·ªÅng trong su·ªët Invisalign. B√°c sƒ© s·∫Ω t∆∞ v·∫•n lo·∫°i ni·ªÅng ph√π h·ª£p nh·∫•t cho t·ª´ng tr∆∞·ªùng h·ª£p.',
      icon: 'ü¶∑'
    },
    {
      id: 6,
      category: 'T·∫©y tr·∫Øng rƒÉng',
      question: 'T·∫©y tr·∫Øng rƒÉng c√≥ an to√†n kh√¥ng? Hi·ªáu qu·∫£ k√©o d√†i bao l√¢u?',
      answer: 'T·∫©y tr·∫Øng rƒÉng b·∫±ng c√¥ng ngh·ªá hi·ªán ƒë·∫°i ho√†n to√†n an to√†n khi th·ª±c hi·ªán ƒë√∫ng quy tr√¨nh. RƒÉng c√≥ th·ªÉ tr·∫Øng h∆°n 3-8 t√¥ng m√†u. Hi·ªáu qu·∫£ k√©o d√†i 2-3 nƒÉm n·∫øu chƒÉm s√≥c ƒë√∫ng c√°ch. Sau t·∫©y tr·∫Øng, b·∫°n n√™n h·∫°n ch·∫ø th·ª±c ph·∫©m c√≥ m√†u v√† v·ªá sinh rƒÉng mi·ªáng ƒë√∫ng c√°ch.',
      icon: '‚ú®'
    },
    {
      id: 7,
      category: 'B·∫£o hi·ªÉm',
      question: 'Ph√≤ng kh√°m c√≥ h·ªó tr·ª£ b·∫£o hi·ªÉm y t·∫ø kh√¥ng?',
      answer: 'Ch√∫ng t√¥i h·ªó tr·ª£ thanh to√°n qua b·∫£o hi·ªÉm y t·∫ø x√£ h·ªôi cho c√°c d·ªãch v·ª• ƒëi·ªÅu tr·ªã c∆° b·∫£n. ƒê·ªëi v·ªõi c√°c d·ªãch v·ª• th·∫©m m·ªπ v√† cao c·∫•p, ph√≤ng kh√°m c√≥ c√°c g√≥i ∆∞u ƒë√£i v√† h·ªó tr·ª£ tr·∫£ g√≥p 0% l√£i su·∫•t. B·∫°n c√≥ th·ªÉ mang theo th·∫ª b·∫£o hi·ªÉm khi ƒë·∫øn kh√°m ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ t·ªëi ƒëa.',
      icon: 'üè•'
    },
    {
      id: 8,
      category: 'ChƒÉm s√≥c sau ƒëi·ªÅu tr·ªã',
      question: 'Sau ƒëi·ªÅu tr·ªã c·∫ßn ch√∫ √Ω g√¨? C√≥ c·∫ßn t√°i kh√°m kh√¥ng?',
      answer: 'Sau m·ªói l·∫ßn ƒëi·ªÅu tr·ªã, b√°c sƒ© s·∫Ω h∆∞·ªõng d·∫´n c√°ch chƒÉm s√≥c c·ª• th·ªÉ. N√≥i chung, b·∫°n n√™n v·ªá sinh rƒÉng mi·ªáng ƒë√∫ng c√°ch, h·∫°n ch·∫ø th·ª±c ph·∫©m c·ª©ng/d√≠nh trong 24-48h ƒë·∫ßu. L·ªãch t√°i kh√°m s·∫Ω ƒë∆∞·ª£c th√¥ng b√°o v√† nh·∫Øc nh·ªü. Ch√∫ng t√¥i c√≥ ch·∫ø ƒë·ªô b·∫£o h√†nh cho c√°c d·ªãch v·ª• ƒëi·ªÅu tr·ªã.',
      icon: 'üîÑ'
    },
    {
      id: 9,
      category: 'Kh·∫©n c·∫•p',
      question: 'Tr∆∞·ªùng h·ª£p rƒÉng ƒëau c·∫•p c√≥ th·ªÉ ƒë·∫øn kh√°m ngay kh√¥ng?',
      answer: 'C√≥, ch√∫ng t√¥i nh·∫≠n kh√°m c·∫•p c·ª©u nha khoa 24/7. B·∫°n c√≥ th·ªÉ g·ªçi hotline kh·∫©n c·∫•p 0987 654 321 ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ ngay l·∫≠p t·ª©c. C√°c tr∆∞·ªùng h·ª£p c·∫•p c·ª©u bao g·ªìm: ƒëau rƒÉng d·ªØ d·ªôi, rƒÉng b·ªã g√£y, ch·∫£y m√°u n∆∞·ªõu kh√¥ng c·∫ßm, nhi·ªÖm tr√πng n·∫∑ng. Ch√∫ng t√¥i s·∫Ω ∆∞u ti√™n kh√°m v√† x·ª≠ l√Ω ngay.',
      icon: 'üö®'
    },
    {
      id: 10,
      category: 'Tr·∫ª em',
      question: 'Ph√≤ng kh√°m c√≥ d·ªãch v·ª• nha khoa cho tr·∫ª em kh√¥ng?',
      answer: 'C√≥, ch√∫ng t√¥i c√≥ chuy√™n khoa nha khoa tr·∫ª em v·ªõi ƒë·ªôi ng≈© b√°c sƒ© ƒë∆∞·ª£c ƒë√†o t·∫°o chuy√™n s√¢u. Ph√≤ng kh√°m ƒë∆∞·ª£c trang tr√≠ th√¢n thi·ªán, c√≥ ƒë·ªì ch∆°i v√† c√°c ho·∫°t ƒë·ªông gi√∫p tr·∫ª b·ªõt lo l·∫Øng. Ch√∫ng t√¥i cung c·∫•p c√°c d·ªãch v·ª•: kh√°m ƒë·ªãnh k·ª≥, b√¥i fluor, h√†n tr√°m rƒÉng s·ªØa, nh·ªï rƒÉng s·ªØa, v√† t∆∞ v·∫•n v·ªá sinh rƒÉng mi·ªáng cho tr·∫ª.',
      icon: 'üë∂'
    }
  ];

  const categories = [...new Set(faqData.map(item => item.category))];

  const [selectedCategory, setSelectedCategory] = useState('T·∫•t c·∫£');

  const toggleItem = (id) => {
    const newOpenItems = new Set(openItems);
    if (newOpenItems.has(id)) {
      newOpenItems.delete(id);
    } else {
      newOpenItems.add(id);
    }
    setOpenItems(newOpenItems);
  };

  const expandAll = () => {
    setOpenItems(new Set(filteredFAQs.map(item => item.id)));
  };

  const collapseAll = () => {
    setOpenItems(new Set());
  };

  const filteredFAQs = faqData.filter(item => {
    const matchesSearch = item.question.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         item.answer.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesCategory = selectedCategory === 'T·∫•t c·∫£' || item.category === selectedCategory;
    return matchesSearch && matchesCategory;
  });

  return (
    <section className="faq">
      <div className="faq__container">
        {/* Header */}
        <div className="faq__header">
          <h2 className="faq__title">C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h2>
          <p className="faq__subtitle">
            T√¨m hi·ªÉu th√™m v·ªÅ d·ªãch v·ª• nha khoa c·ªßa ch√∫ng t√¥i qua c√°c c√¢u h·ªèi ph·ªï bi·∫øn
          </p>
        </div>

        {/* Controls */}
        <div className="faq__controls">
          {/* Search */}
          <div className="faq__search">
            <div className="faq__search-wrapper">
              <span className="faq__search-icon">üîç</span>
              <input
                type="text"
                placeholder="T√¨m ki·∫øm c√¢u h·ªèi..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="faq__search-input"
              />
              {searchTerm && (
                <button
                  className="faq__search-clear"
                  onClick={() => setSearchTerm('')}
                  aria-label="X√≥a t√¨m ki·∫øm"
                >
                  ‚úï
                </button>
              )}
            </div>
          </div>

          {/* Categories */}
          <div className="faq__categories">
            <button
              className={`faq__category ${selectedCategory === 'T·∫•t c·∫£' ? 'faq__category--active' : ''}`}
              onClick={() => setSelectedCategory('T·∫•t c·∫£')}
            >
              T·∫•t c·∫£
            </button>
            {categories.map(category => (
              <button
                key={category}
                className={`faq__category ${selectedCategory === category ? 'faq__category--active' : ''}`}
                onClick={() => setSelectedCategory(category)}
              >
                {category}
              </button>
            ))}
          </div>

          {/* Action buttons */}
          <div className="faq__actions">
            <button className="faq__action-btn" onClick={expandAll}>
              üìñ M·ªü r·ªông t·∫•t c·∫£
            </button>
            <button className="faq__action-btn" onClick={collapseAll}>
              üìï Thu g·ªçn t·∫•t c·∫£
            </button>
          </div>
        </div>

        {/* Results info */}
        <div className="faq__results">
          <p className="faq__results-text">
            Hi·ªÉn th·ªã <strong>{filteredFAQs.length}</strong> c√¢u h·ªèi
            {searchTerm && ` cho "${searchTerm}"`}
            {selectedCategory !== 'T·∫•t c·∫£' && ` trong danh m·ª•c "${selectedCategory}"`}
          </p>
        </div>

        {/* FAQ Items */}
        <div className="faq__list">
          {filteredFAQs.length > 0 ? (
            filteredFAQs.map((item) => (
              <div
                key={item.id}
                className={`faq__item ${openItems.has(item.id) ? 'faq__item--open' : ''}`}
              >
                <button
                  className="faq__question"
                  onClick={() => toggleItem(item.id)}
                  aria-expanded={openItems.has(item.id)}
                  aria-controls={`faq-answer-${item.id}`}
                >
                  <span className="faq__question-icon">{item.icon}</span>
                  <span className="faq__question-text">{item.question}</span>
                  <span className="faq__question-category">{item.category}</span>
                  <span className="faq__toggle-icon">
                    {openItems.has(item.id) ? '‚àí' : '+'}
                  </span>
                </button>
                
                <div
                  id={`faq-answer-${item.id}`}
                  className="faq__answer"
                  aria-hidden={!openItems.has(item.id)}
                >
                  <div className="faq__answer-content">
                    <p>{item.answer}</p>
                  </div>
                </div>
              </div>
            ))
          ) : (
            <div className="faq__empty">
              <div className="faq__empty-icon">ü§î</div>
              <h3 className="faq__empty-title">Kh√¥ng t√¨m th·∫•y c√¢u h·ªèi ph√π h·ª£p</h3>
              <p className="faq__empty-text">
                Th·ª≠ t√¨m ki·∫øm v·ªõi t·ª´ kh√≥a kh√°c ho·∫∑c ch·ªçn danh m·ª•c kh√°c
              </p>
              <button
                className="faq__empty-btn"
                onClick={() => {
                  setSearchTerm('');
                  setSelectedCategory('T·∫•t c·∫£');
                }}
              >
                Xem t·∫•t c·∫£ c√¢u h·ªèi
              </button>
            </div>
          )}
        </div>

        {/* Contact CTA */}
        <div className="faq__cta">
          <div className="faq__cta-content">
            <h3 className="faq__cta-title">Kh√¥ng t√¨m th·∫•y c√¢u tr·∫£ l·ªùi?</h3>
            <p className="faq__cta-text">
              Li√™n h·ªá v·ªõi ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n tr·ª±c ti·∫øp b·ªüi c√°c chuy√™n gia nha khoa
            </p>
            <div className="faq__cta-actions">
              <a href="tel:0987654321" className="faq__cta-btn faq__cta-btn--primary">
                üìû G·ªçi ngay
              </a>
              <a href="/contact" className="faq__cta-btn faq__cta-btn--secondary">
                üí¨ Nh·∫Øn tin
              </a>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default FAQ;